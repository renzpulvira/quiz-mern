[{"/home/renz/Documents/dev/mern/quiz-mern/src/index.js":"1","/home/renz/Documents/dev/mern/quiz-mern/src/App.js":"2","/home/renz/Documents/dev/mern/quiz-mern/src/reportWebVitals.js":"3","/home/renz/Documents/dev/mern/quiz-mern/src/views/Home.jsx":"4","/home/renz/Documents/dev/mern/quiz-mern/src/views/Login.jsx":"5","/home/renz/Documents/dev/mern/quiz-mern/src/views/Quiz.jsx":"6","/home/renz/Documents/dev/mern/quiz-mern/src/components/PostFilter.jsx":"7","/home/renz/Documents/dev/mern/quiz-mern/src/components/MainHeader.jsx":"8","/home/renz/Documents/dev/mern/quiz-mern/src/components/Posts.jsx":"9","/home/renz/Documents/dev/mern/quiz-mern/src/components/UserImage.jsx":"10","/home/renz/Documents/dev/mern/quiz-mern/src/components/QuizTimer.jsx":"11","/home/renz/Documents/dev/mern/quiz-mern/src/components/QuizChoices.jsx":"12"},{"size":504,"mtime":1615670997964,"results":"13","hashOfConfig":"14"},{"size":538,"mtime":1615672942186,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1615670997964,"results":"16","hashOfConfig":"14"},{"size":461,"mtime":1615715280346,"results":"17","hashOfConfig":"14"},{"size":454,"mtime":1615670997964,"results":"18","hashOfConfig":"14"},{"size":1459,"mtime":1615739461284,"results":"19","hashOfConfig":"14"},{"size":403,"mtime":1615670997960,"results":"20","hashOfConfig":"14"},{"size":1033,"mtime":1615670997960,"results":"21","hashOfConfig":"14"},{"size":2630,"mtime":1615670997960,"results":"22","hashOfConfig":"14"},{"size":124,"mtime":1615670997960,"results":"23","hashOfConfig":"14"},{"size":1508,"mtime":1615737748735,"results":"24","hashOfConfig":"14"},{"size":1043,"mtime":1615739363257,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"neuert",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/renz/Documents/dev/mern/quiz-mern/src/index.js",[],["54","55"],"/home/renz/Documents/dev/mern/quiz-mern/src/App.js",[],"/home/renz/Documents/dev/mern/quiz-mern/src/reportWebVitals.js",[],"/home/renz/Documents/dev/mern/quiz-mern/src/views/Home.jsx",[],"/home/renz/Documents/dev/mern/quiz-mern/src/views/Login.jsx",[],"/home/renz/Documents/dev/mern/quiz-mern/src/views/Quiz.jsx",["56","57","58"],"/home/renz/Documents/dev/mern/quiz-mern/src/components/PostFilter.jsx",["59"],"import React, { useState } from \"react\";\n\nexport default function PostFilter() {\n  const [filterData, setFilterData] = useState([\n    \"gameofthrones\",\n    \"starwars\",\n    \"deadcells\",\n    \"computers\",\n    \"bitcoin\",\n  ]);\n\n  return (\n    <div className=\"filters\">\n      <span>Filters: </span>\n      <ul>\n        {filterData.map((x) => (\n          <li>#{x}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","/home/renz/Documents/dev/mern/quiz-mern/src/components/MainHeader.jsx",["60","61"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../assets/Quizly.png\";\nimport cog from \"../assets/icon-cog.png\";\nimport bell from \"../assets/icon-bell.png\";\nimport UserImage from \"./UserImage\";\n\nfunction MainHeader() {\n  const [userProfile, setUserProfile] = useState(\"\");\n\n  return (\n    <header className=\"mainHeader\">\n      <div className=\"mainHeader__container globalContainer\">\n        <div className=\"mainHeader__left\">\n          <Link to=\"/\">\n            <img src={Logo} alt=\"\" />\n          </Link>\n          <input\n            className=\"mainHeader__search\"\n            type=\"text\"\n            placeholder=\"Search...\"\n          />\n        </div>\n        <div className=\"mainHeader__right\">\n          <Link className=\"createQuiz\" type=\"button\" to=\"/create\">\n            Create a Quiz\n          </Link>\n          <img src={cog} alt=\"\" />\n          <img src={bell} alt=\"\" />\n          <UserImage />\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default MainHeader;\n","/home/renz/Documents/dev/mern/quiz-mern/src/components/Posts.jsx",["62"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport userImage from \"../assets/img-dummy-user.png\";\nimport quizFeatured from \"../assets/img-quizitem.png\";\n\nexport default function Posts() {\n  const [postData, setPostData] = useState([\n    {\n      _postId: 412,\n      user: \"Andre Bonita\",\n      title: \"Starwars Fan\",\n      descrip:\n        \"I have created a Quiz for All Starwars fan, Challenge yourself if you are a tru Obi wan kenobi\",\n      postData: \"12.08.16\",\n      quizItemData: {\n        quizTitle: \"Are you a true obi wan kenobi\",\n        quizImage: quizFeatured,\n        quizDescrip: \"Lots of Hard Starwars Questions about the trilogy movies\",\n        quizUrl: \"812598jfawuiejfan\",\n      },\n      quizMeta: {\n        quizTags: [\"obiwankenobi\", \"startrek\"],\n        quizPublished: \"01.25.2021\",\n      },\n    },\n    {\n      _postId: 412,\n      user: \"Andre Bonita\",\n      title: \"Starwars Fan\",\n      descrip:\n        \"I have created a Quiz for All Starwars fan, Challenge yourself if you are a tru Obi wan kenobi\",\n      postData: \"12.08.16\",\n      quizItemData: {\n        quizTitle: \"Are you a true obi wan kenobi\",\n        quizImage: quizFeatured,\n        quizDescrip: \"Lots of Hard Starwars Questions about the trilogy movies\",\n        quizUrl: \"812598jfawuiejfan\",\n      },\n      quizMeta: {\n        quizTags: [\"obiwankenobi\", \"startrek\"],\n        quizPublished: \"01.25.2021\",\n      },\n    },\n  ]);\n\n  return (\n    <div className=\"posts\">\n      {postData.map((x) => (\n        <div className=\"postItem\">\n          <img src={userImage} alt=\"\" />\n          <div className=\"postItem__content\">\n            <h3>{x.user}</h3>\n            <span>{x.title}</span>\n            <p>{x.descrip}</p>\n            <div className=\"postItem__quiz-info\">\n              <div\n                className=\"quiz-image\"\n                style={{\n                  backgroundImage: `url(${x.quizItemData.quizImage})`,\n                }}\n              ></div>\n              <div className=\"quiz-content\">\n                <h4>{x.quizItemData.quizTitle}</h4>\n                <p>{x.quizItemData.quizDescrip}</p>\n                <div className=\"quiz-link\">\n                  <Link to={x.quizItemData.quizUrl}>Take Quiz</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"postMeta\" style={{ flex: \"0 100%\" }}>\n            <ul>\n              {x.quizMeta.quizTags.map((y) => (\n                <li>#{y}</li>\n              ))}\n            </ul>\n            <span>{x.quizMeta.quizPublished}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n","/home/renz/Documents/dev/mern/quiz-mern/src/components/UserImage.jsx",[],"/home/renz/Documents/dev/mern/quiz-mern/src/components/QuizTimer.jsx",["63"],"/home/renz/Documents/dev/mern/quiz-mern/src/components/QuizChoices.jsx",["64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":7,"column":10,"nodeType":"71","messageId":"72","endLine":7,"endColumn":17},{"ruleId":"69","severity":1,"message":"73","line":7,"column":19,"nodeType":"71","messageId":"72","endLine":7,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":17,"column":6,"nodeType":"76","endLine":17,"endColumn":8,"suggestions":"77"},{"ruleId":"69","severity":1,"message":"78","line":4,"column":22,"nodeType":"71","messageId":"72","endLine":4,"endColumn":35},{"ruleId":"69","severity":1,"message":"79","line":9,"column":10,"nodeType":"71","messageId":"72","endLine":9,"endColumn":21},{"ruleId":"69","severity":1,"message":"80","line":9,"column":23,"nodeType":"71","messageId":"72","endLine":9,"endColumn":37},{"ruleId":"69","severity":1,"message":"81","line":7,"column":20,"nodeType":"71","messageId":"72","endLine":7,"endColumn":31},{"ruleId":"74","severity":1,"message":"82","line":30,"column":17,"nodeType":"83","endLine":44,"endColumn":15},{"ruleId":"69","severity":1,"message":"84","line":4,"column":21,"nodeType":"71","messageId":"72","endLine":4,"endColumn":33},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'theText' is assigned a value but never used.","Identifier","unusedVar","'setTheText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'methodSetIsStarted'. Either include it or remove the dependency array.","ArrayExpression",["87"],"'setFilterData' is assigned a value but never used.","'userProfile' is assigned a value but never used.","'setUserProfile' is assigned a value but never used.","'setPostData' is assigned a value but never used.","Assignments to the 'myTimer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'setQuestions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [methodSetIsStarted]",{"range":"90","text":"91"},[512,514],"[methodSetIsStarted]"]